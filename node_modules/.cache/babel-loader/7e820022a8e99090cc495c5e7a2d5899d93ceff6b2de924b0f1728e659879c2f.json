{"ast":null,"code":"const noOp = () => {};\nfunction clamp(value, min, max) {\n  if (max !== null && value > max) {\n    return max;\n  }\n  if (min !== null && value < min) {\n    return min;\n  }\n  return value;\n}\nfunction getDecimalPrecision(num) {\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split(\"e-\");\n    const matissaDecimalPart = parts[0].split(\".\")[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n  const decimalPart = num.toString().split(\".\")[1];\n  return decimalPart ? decimalPart.length : 0;\n}\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction getSize(value) {\n  return typeof value === \"number\" ? `${value}px` : value;\n}\nexport { clamp, getDecimalPrecision, getSize, noOp, roundValueToStep };","map":{"version":3,"names":["noOp","clamp","value","min","max","getDecimalPrecision","num","Math","abs","parts","toExponential","split","matissaDecimalPart","length","parseInt","decimalPart","toString","roundValueToStep","step","nearest","round","Number","toFixed","getSize"],"sources":["/Users/danielbednarski/darighost.github.io/node_modules/react95/dist/common/utils/index.mjs"],"sourcesContent":["const noOp = () => {\n};\nfunction clamp(value, min, max) {\n  if (max !== null && value > max) {\n    return max;\n  }\n  if (min !== null && value < min) {\n    return min;\n  }\n  return value;\n}\nfunction getDecimalPrecision(num) {\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split(\"e-\");\n    const matissaDecimalPart = parts[0].split(\".\")[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n  const decimalPart = num.toString().split(\".\")[1];\n  return decimalPart ? decimalPart.length : 0;\n}\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction getSize(value) {\n  return typeof value === \"number\" ? `${value}px` : value;\n}\n\nexport { clamp, getDecimalPrecision, getSize, noOp, roundValueToStep };\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGA,CAAA,KAAM,CACnB,CAAC;AACD,SAASC,KAAKA,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAC9B,IAAIA,GAAG,KAAK,IAAI,IAAIF,KAAK,GAAGE,GAAG,EAAE;IAC/B,OAAOA,GAAG;EACZ;EACA,IAAID,GAAG,KAAK,IAAI,IAAID,KAAK,GAAGC,GAAG,EAAE;IAC/B,OAAOA,GAAG;EACZ;EACA,OAAOD,KAAK;AACd;AACA,SAASG,mBAAmBA,CAACC,GAAG,EAAE;EAChC,IAAIC,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC,GAAG,CAAC,EAAE;IACrB,MAAMG,KAAK,GAAGH,GAAG,CAACI,aAAa,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;IAC7C,MAAMC,kBAAkB,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjD,OAAO,CAACC,kBAAkB,GAAGA,kBAAkB,CAACC,MAAM,GAAG,CAAC,IAAIC,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EACtF;EACA,MAAMM,WAAW,GAAGT,GAAG,CAACU,QAAQ,CAAC,CAAC,CAACL,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChD,OAAOI,WAAW,GAAGA,WAAW,CAACF,MAAM,GAAG,CAAC;AAC7C;AACA,SAASI,gBAAgBA,CAACf,KAAK,EAAEgB,IAAI,EAAEf,GAAG,EAAE;EAC1C,MAAMgB,OAAO,GAAGZ,IAAI,CAACa,KAAK,CAAC,CAAClB,KAAK,GAAGC,GAAG,IAAIe,IAAI,CAAC,GAAGA,IAAI,GAAGf,GAAG;EAC7D,OAAOkB,MAAM,CAACF,OAAO,CAACG,OAAO,CAACjB,mBAAmB,CAACa,IAAI,CAAC,CAAC,CAAC;AAC3D;AACA,SAASK,OAAOA,CAACrB,KAAK,EAAE;EACtB,OAAO,OAAOA,KAAK,KAAK,QAAQ,GAAG,GAAGA,KAAK,IAAI,GAAGA,KAAK;AACzD;AAEA,SAASD,KAAK,EAAEI,mBAAmB,EAAEkB,OAAO,EAAEvB,IAAI,EAAEiB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}