{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/eliana/Documents/Code/darighost.github.io/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _templateObject, _templateObject2;\nimport React__default from 'react';\nimport styled, { css } from 'styled-components';\nimport { createHatchedBackground } from '../common/index.mjs';\nconst DigitWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n  --react95-digit-primary-color: #ff0102;\\n  --react95-digit-secondary-color: #740201;\\n  --react95-digit-bg-color: #000000;\\n\\n  \", \"\\n\"])), _ref => {\n  let {\n    pixelSize\n  } = _ref;\n  return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    width: \", \"px;\\n    height: \", \"px;\\n    margin: \", \"px;\\n\\n    span,\\n    span:before,\\n    span:after {\\n      box-sizing: border-box;\\n      display: inline-block;\\n      position: absolute;\\n    }\\n    span.active,\\n    span.active:before,\\n    span.active:after {\\n      background: var(--react95-digit-primary-color);\\n    }\\n    span:not(.active),\\n    span:not(.active):before,\\n    span:not(.active):after {\\n      \", \"\\n    }\\n\\n    span.horizontal,\\n    span.horizontal:before,\\n    span.horizontal:after {\\n      height: \", \"px;\\n      border-left: \", \"px solid var(--react95-digit-bg-color);\\n      border-right: \", \"px solid var(--react95-digit-bg-color);\\n    }\\n    span.horizontal.active,\\n    span.horizontal.active:before,\\n    span.horizontal.active:after {\\n      height: \", \"px;\\n      border-left: \", \"px solid var(--react95-digit-primary-color);\\n      border-right: \", \"px solid var(--react95-digit-primary-color);\\n    }\\n    span.horizontal {\\n      left: \", \"px;\\n      width: \", \"px;\\n    }\\n    span.horizontal:before {\\n      content: '';\\n      width: 100%;\\n      top: \", \"px;\\n      left: \", \"px;\\n    }\\n    span.horizontal:after {\\n      content: '';\\n      width: calc(100% - \", \"px);\\n      top: \", \"px;\\n      left: \", \"px;\\n    }\\n    span.horizontal.top {\\n      top: 0;\\n    }\\n    span.horizontal.bottom {\\n      bottom: 0;\\n      transform: rotateX(180deg);\\n    }\\n\\n    span.center,\\n    span.center:before,\\n    span.center:after {\\n      height: \", \"px;\\n      border-left: \", \"px solid var(--react95-digit-bg-color);\\n      border-right: \", \"px solid var(--react95-digit-bg-color);\\n    }\\n    span.center.active,\\n    span.center.active:before,\\n    span.center.active:after {\\n      border-left: \", \"px solid var(--react95-digit-primary-color);\\n      border-right: \", \"px solid var(--react95-digit-primary-color);\\n    }\\n    span.center {\\n      top: 50%;\\n      transform: translateY(-50%);\\n      left: \", \"px;\\n      width: \", \"px;\\n    }\\n    span.center:before,\\n    span.center:after {\\n      content: '';\\n      width: 100%;\\n    }\\n    span.center:before {\\n      top: \", \"px;\\n    }\\n    span.center:after {\\n      bottom: \", \"px;\\n    }\\n\\n    span.vertical,\\n    span.vertical:before,\\n    span.vertical:after {\\n      width: \", \"px;\\n      border-top: \", \"px solid var(--react95-digit-bg-color);\\n      border-bottom: \", \"px solid var(--react95-digit-bg-color);\\n    }\\n    span.vertical {\\n      height: \", \"px;\\n    }\\n    span.vertical.left {\\n      left: 0;\\n    }\\n    span.vertical.right {\\n      right: 0;\\n      transform: rotateY(180deg);\\n    }\\n    span.vertical.top {\\n      top: 0px;\\n    }\\n    span.vertical.bottom {\\n      bottom: 0px;\\n    }\\n    span.vertical:before {\\n      content: '';\\n      height: 100%;\\n      top: \", \"px;\\n      left: \", \"px;\\n    }\\n    span.vertical:after {\\n      content: '';\\n      height: calc(100% - \", \"px);\\n      top: \", \"px;\\n      left: \", \"px;\\n    }\\n  \"])), 11 * pixelSize, 21 * pixelSize, pixelSize, createHatchedBackground({\n    mainColor: \"var(--react95-digit-bg-color)\",\n    secondaryColor: \"var(--react95-digit-secondary-color)\",\n    pixelSize\n  }), pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, 9 * pixelSize, pixelSize, 0, pixelSize * 2, 2 * pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, 9 * pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, pixelSize, 11 * pixelSize, 0, pixelSize, pixelSize * 2, pixelSize, pixelSize * 2);\n});\nconst segments = [\"horizontal top\", \"center\", \"horizontal bottom\", \"vertical top left\", \"vertical top right\", \"vertical bottom left\", \"vertical bottom right\"];\nconst digitActiveSegments = [[1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1]];\nfunction Digit(_ref2) {\n  let {\n    digit = 0,\n    pixelSize = 2,\n    ...otherProps\n  } = _ref2;\n  const segmentClasses = digitActiveSegments[Number(digit)].map((isActive, i) => isActive ? \"\".concat(segments[i], \" active\") : segments[i]);\n  return React__default.createElement(DigitWrapper, {\n    pixelSize,\n    ...otherProps\n  }, segmentClasses.map((className, i) => React__default.createElement(\"span\", {\n    className,\n    key: i\n  })));\n}\nexport { Digit };","map":{"version":3,"names":["React__default","styled","css","createHatchedBackground","DigitWrapper","div","_templateObject","_taggedTemplateLiteral","_ref","pixelSize","_templateObject2","mainColor","secondaryColor","segments","digitActiveSegments","Digit","_ref2","digit","otherProps","segmentClasses","Number","map","isActive","i","concat","createElement","className","key"],"sources":["/Users/eliana/Documents/Code/darighost.github.io/node_modules/react95/dist/Counter/Digit.mjs"],"sourcesContent":["import React__default from 'react';\nimport styled, { css } from 'styled-components';\nimport { createHatchedBackground } from '../common/index.mjs';\n\nconst DigitWrapper = styled.div`\n  position: relative;\n  --react95-digit-primary-color: #ff0102;\n  --react95-digit-secondary-color: #740201;\n  --react95-digit-bg-color: #000000;\n\n  ${({ pixelSize }) => css`\n    width: ${11 * pixelSize}px;\n    height: ${21 * pixelSize}px;\n    margin: ${pixelSize}px;\n\n    span,\n    span:before,\n    span:after {\n      box-sizing: border-box;\n      display: inline-block;\n      position: absolute;\n    }\n    span.active,\n    span.active:before,\n    span.active:after {\n      background: var(--react95-digit-primary-color);\n    }\n    span:not(.active),\n    span:not(.active):before,\n    span:not(.active):after {\n      ${createHatchedBackground({\n  mainColor: \"var(--react95-digit-bg-color)\",\n  secondaryColor: \"var(--react95-digit-secondary-color)\",\n  pixelSize\n})}\n    }\n\n    span.horizontal,\n    span.horizontal:before,\n    span.horizontal:after {\n      height: ${pixelSize}px;\n      border-left: ${pixelSize}px solid var(--react95-digit-bg-color);\n      border-right: ${pixelSize}px solid var(--react95-digit-bg-color);\n    }\n    span.horizontal.active,\n    span.horizontal.active:before,\n    span.horizontal.active:after {\n      height: ${pixelSize}px;\n      border-left: ${pixelSize}px solid var(--react95-digit-primary-color);\n      border-right: ${pixelSize}px solid var(--react95-digit-primary-color);\n    }\n    span.horizontal {\n      left: ${pixelSize}px;\n      width: ${9 * pixelSize}px;\n    }\n    span.horizontal:before {\n      content: '';\n      width: 100%;\n      top: ${pixelSize}px;\n      left: ${0}px;\n    }\n    span.horizontal:after {\n      content: '';\n      width: calc(100% - ${pixelSize * 2}px);\n      top: ${2 * pixelSize}px;\n      left: ${pixelSize}px;\n    }\n    span.horizontal.top {\n      top: 0;\n    }\n    span.horizontal.bottom {\n      bottom: 0;\n      transform: rotateX(180deg);\n    }\n\n    span.center,\n    span.center:before,\n    span.center:after {\n      height: ${pixelSize}px;\n      border-left: ${pixelSize}px solid var(--react95-digit-bg-color);\n      border-right: ${pixelSize}px solid var(--react95-digit-bg-color);\n    }\n    span.center.active,\n    span.center.active:before,\n    span.center.active:after {\n      border-left: ${pixelSize}px solid var(--react95-digit-primary-color);\n      border-right: ${pixelSize}px solid var(--react95-digit-primary-color);\n    }\n    span.center {\n      top: 50%;\n      transform: translateY(-50%);\n      left: ${pixelSize}px;\n      width: ${9 * pixelSize}px;\n    }\n    span.center:before,\n    span.center:after {\n      content: '';\n      width: 100%;\n    }\n    span.center:before {\n      top: ${pixelSize}px;\n    }\n    span.center:after {\n      bottom: ${pixelSize}px;\n    }\n\n    span.vertical,\n    span.vertical:before,\n    span.vertical:after {\n      width: ${pixelSize}px;\n      border-top: ${pixelSize}px solid var(--react95-digit-bg-color);\n      border-bottom: ${pixelSize}px solid var(--react95-digit-bg-color);\n    }\n    span.vertical {\n      height: ${11 * pixelSize}px;\n    }\n    span.vertical.left {\n      left: 0;\n    }\n    span.vertical.right {\n      right: 0;\n      transform: rotateY(180deg);\n    }\n    span.vertical.top {\n      top: 0px;\n    }\n    span.vertical.bottom {\n      bottom: 0px;\n    }\n    span.vertical:before {\n      content: '';\n      height: 100%;\n      top: ${0}px;\n      left: ${pixelSize}px;\n    }\n    span.vertical:after {\n      content: '';\n      height: calc(100% - ${pixelSize * 2}px);\n      top: ${pixelSize}px;\n      left: ${pixelSize * 2}px;\n    }\n  `}\n`;\nconst segments = [\n  \"horizontal top\",\n  \"center\",\n  \"horizontal bottom\",\n  \"vertical top left\",\n  \"vertical top right\",\n  \"vertical bottom left\",\n  \"vertical bottom right\"\n];\nconst digitActiveSegments = [\n  [1, 0, 1, 1, 1, 1, 1],\n  [0, 0, 0, 0, 1, 0, 1],\n  [1, 1, 1, 0, 1, 1, 0],\n  [1, 1, 1, 0, 1, 0, 1],\n  [0, 1, 0, 1, 1, 0, 1],\n  [1, 1, 1, 1, 0, 0, 1],\n  [1, 1, 1, 1, 0, 1, 1],\n  [1, 0, 0, 0, 1, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1],\n  [1, 1, 1, 1, 1, 0, 1]\n];\nfunction Digit({ digit = 0, pixelSize = 2, ...otherProps }) {\n  const segmentClasses = digitActiveSegments[Number(digit)].map((isActive, i) => isActive ? `${segments[i]} active` : segments[i]);\n  return React__default.createElement(DigitWrapper, { pixelSize, ...otherProps }, segmentClasses.map((className, i) => React__default.createElement(\"span\", { className, key: i })));\n}\n\nexport { Digit };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}