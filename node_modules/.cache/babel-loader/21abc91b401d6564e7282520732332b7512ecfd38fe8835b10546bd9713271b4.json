{"ast":null,"code":"import React__default, { forwardRef, useRef, useImperativeHandle, useMemo, useCallback } from 'react';\nimport { useId } from '../common/hooks/useId.mjs';\nimport { StyledInner, StyledSelectContent, StyledDropdownMenu, StyledDropdownMenuItem } from './Select.styles.mjs';\nimport { useSelectCommon } from './useSelectCommon.mjs';\nimport { useSelectState } from './useSelectState.mjs';\nexport { SelectNative } from './SelectNative.mjs';\nfunction SelectInnerOption({\n  activateOptionIndex,\n  active,\n  index,\n  onClick,\n  option,\n  selected,\n  setRef\n}) {\n  const handleOnMouseEnter = useCallback(() => {\n    activateOptionIndex(index);\n  }, [activateOptionIndex, index]);\n  const handleSetRef = useCallback(ref => {\n    setRef(ref, index);\n  }, [index, setRef]);\n  const id = useId();\n  return React__default.createElement(StyledDropdownMenuItem, {\n    active,\n    \"aria-selected\": selected ? \"true\" : void 0,\n    \"data-value\": option.value,\n    id,\n    onClick,\n    onMouseEnter: handleOnMouseEnter,\n    ref: handleSetRef,\n    role: \"option\",\n    tabIndex: 0\n  }, option.label);\n}\nfunction SelectInner({\n  \"aria-label\": ariaLabel,\n  \"aria-labelledby\": ariaLabelledBy,\n  className,\n  defaultValue,\n  disabled = false,\n  formatDisplay,\n  inputProps,\n  labelId,\n  menuMaxHeight,\n  name,\n  onBlur,\n  onChange,\n  onClose,\n  onFocus,\n  onKeyDown,\n  onMouseDown,\n  onOpen,\n  open: openProp,\n  options: optionsProp,\n  readOnly,\n  shadow = true,\n  style,\n  variant = \"default\",\n  value: valueProp,\n  width = \"auto\",\n  ...otherProps\n}, ref) {\n  const {\n    isEnabled,\n    options,\n    setValue,\n    value,\n    wrapperProps,\n    DropdownButton,\n    Wrapper\n  } = useSelectCommon({\n    className,\n    defaultValue,\n    disabled,\n    native: false,\n    onChange,\n    options: optionsProp,\n    style,\n    readOnly,\n    value: valueProp,\n    variant,\n    width\n  });\n  const inputRef = useRef(null);\n  const selectRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const {\n    activeOption,\n    handleActivateOptionIndex,\n    handleBlur,\n    handleButtonKeyDown,\n    handleDropdownKeyDown,\n    handleFocus,\n    handleMouseDown,\n    handleOptionClick,\n    handleSetDropdownRef,\n    handleSetOptionRef,\n    open,\n    selectedOption\n  } = useSelectState({\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onKeyDown,\n    onMouseDown,\n    onOpen,\n    open: openProp,\n    options,\n    value,\n    selectRef,\n    setValue,\n    wrapperRef\n  });\n  useImperativeHandle(ref, () => ({\n    focus: focusOptions => {\n      var _a;\n      (_a = selectRef.current) === null || _a === void 0 ? void 0 : _a.focus(focusOptions);\n    },\n    node: inputRef.current,\n    value: String(value)\n  }), [value]);\n  const displayLabel = useMemo(() => !selectedOption ? \"\" : typeof formatDisplay === \"function\" ? formatDisplay(selectedOption) : selectedOption.label, [formatDisplay, selectedOption]);\n  const tabIndex = isEnabled ? 1 : void 0;\n  const dropdownMenuStyle = useMemo(() => menuMaxHeight ? {\n    overflow: \"auto\",\n    maxHeight: menuMaxHeight\n  } : void 0, [menuMaxHeight]);\n  const dropdownMenuId = useId();\n  const optionsContent = useMemo(() => options.map((option, index) => {\n    const key = `${value}-${index}`;\n    const active = option === activeOption;\n    const selected = option === selectedOption;\n    return React__default.createElement(SelectInnerOption, {\n      activateOptionIndex: handleActivateOptionIndex,\n      active,\n      index,\n      key,\n      onClick: handleOptionClick,\n      option,\n      selected,\n      setRef: handleSetOptionRef\n    });\n  }), [activeOption, handleActivateOptionIndex, handleOptionClick, handleSetOptionRef, options, selectedOption, value]);\n  return React__default.createElement(Wrapper, {\n    ...wrapperProps,\n    \"$disabled\": disabled,\n    ref: wrapperRef,\n    shadow,\n    style: {\n      ...style,\n      width\n    }\n  }, React__default.createElement(\"input\", {\n    name,\n    ref: inputRef,\n    type: \"hidden\",\n    value: String(value),\n    ...inputProps\n  }), React__default.createElement(StyledInner, {\n    \"aria-disabled\": disabled,\n    \"aria-expanded\": open,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy !== null && ariaLabelledBy !== void 0 ? ariaLabelledBy : labelId,\n    \"aria-owns\": isEnabled && open ? dropdownMenuId : void 0,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyDown: handleButtonKeyDown,\n    onMouseDown: isEnabled ? handleMouseDown : onMouseDown,\n    ref: selectRef,\n    role: \"button\",\n    tabIndex,\n    ...otherProps\n  }, React__default.createElement(StyledSelectContent, null, displayLabel), DropdownButton), isEnabled && open && React__default.createElement(StyledDropdownMenu, {\n    id: dropdownMenuId,\n    onKeyDown: handleDropdownKeyDown,\n    ref: handleSetDropdownRef,\n    role: \"listbox\",\n    style: dropdownMenuStyle,\n    tabIndex: 0,\n    variant\n  }, optionsContent));\n}\nconst Select = forwardRef(SelectInner);\nSelect.displayName = \"Select\";\nexport { Select };","map":{"version":3,"names":["React__default","forwardRef","useRef","useImperativeHandle","useMemo","useCallback","useId","StyledInner","StyledSelectContent","StyledDropdownMenu","StyledDropdownMenuItem","useSelectCommon","useSelectState","SelectNative","SelectInnerOption","activateOptionIndex","active","index","onClick","option","selected","setRef","handleOnMouseEnter","handleSetRef","ref","id","createElement","value","onMouseEnter","role","tabIndex","label","SelectInner","ariaLabel","ariaLabelledBy","className","defaultValue","disabled","formatDisplay","inputProps","labelId","menuMaxHeight","name","onBlur","onChange","onClose","onFocus","onKeyDown","onMouseDown","onOpen","open","openProp","options","optionsProp","readOnly","shadow","style","variant","valueProp","width","otherProps","isEnabled","setValue","wrapperProps","DropdownButton","Wrapper","native","inputRef","selectRef","wrapperRef","activeOption","handleActivateOptionIndex","handleBlur","handleButtonKeyDown","handleDropdownKeyDown","handleFocus","handleMouseDown","handleOptionClick","handleSetDropdownRef","handleSetOptionRef","selectedOption","focus","focusOptions","_a","current","node","String","displayLabel","dropdownMenuStyle","overflow","maxHeight","dropdownMenuId","optionsContent","map","key","type","Select","displayName"],"sources":["/Users/eliana/Documents/Code/darighost.github.io/node_modules/react95/dist/Select/Select.mjs"],"sourcesContent":["import React__default, { forwardRef, useRef, useImperativeHandle, useMemo, useCallback } from 'react';\nimport { useId } from '../common/hooks/useId.mjs';\nimport { StyledInner, StyledSelectContent, StyledDropdownMenu, StyledDropdownMenuItem } from './Select.styles.mjs';\nimport { useSelectCommon } from './useSelectCommon.mjs';\nimport { useSelectState } from './useSelectState.mjs';\nexport { SelectNative } from './SelectNative.mjs';\n\nfunction SelectInnerOption({ activateOptionIndex, active, index, onClick, option, selected, setRef }) {\n  const handleOnMouseEnter = useCallback(() => {\n    activateOptionIndex(index);\n  }, [activateOptionIndex, index]);\n  const handleSetRef = useCallback((ref) => {\n    setRef(ref, index);\n  }, [index, setRef]);\n  const id = useId();\n  return React__default.createElement(StyledDropdownMenuItem, { active, \"aria-selected\": selected ? \"true\" : void 0, \"data-value\": option.value, id, onClick, onMouseEnter: handleOnMouseEnter, ref: handleSetRef, role: \"option\", tabIndex: 0 }, option.label);\n}\nfunction SelectInner({ \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, className, defaultValue, disabled = false, formatDisplay, inputProps, labelId, menuMaxHeight, name, onBlur, onChange, onClose, onFocus, onKeyDown, onMouseDown, onOpen, open: openProp, options: optionsProp, readOnly, shadow = true, style, variant = \"default\", value: valueProp, width = \"auto\", ...otherProps }, ref) {\n  const { isEnabled, options, setValue, value, wrapperProps, DropdownButton, Wrapper } = useSelectCommon({\n    className,\n    defaultValue,\n    disabled,\n    native: false,\n    onChange,\n    options: optionsProp,\n    style,\n    readOnly,\n    value: valueProp,\n    variant,\n    width\n  });\n  const inputRef = useRef(null);\n  const selectRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const { activeOption, handleActivateOptionIndex, handleBlur, handleButtonKeyDown, handleDropdownKeyDown, handleFocus, handleMouseDown, handleOptionClick, handleSetDropdownRef, handleSetOptionRef, open, selectedOption } = useSelectState({\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onKeyDown,\n    onMouseDown,\n    onOpen,\n    open: openProp,\n    options,\n    value,\n    selectRef,\n    setValue,\n    wrapperRef\n  });\n  useImperativeHandle(ref, () => ({\n    focus: (focusOptions) => {\n      var _a;\n      (_a = selectRef.current) === null || _a === void 0 ? void 0 : _a.focus(focusOptions);\n    },\n    node: inputRef.current,\n    value: String(value)\n  }), [value]);\n  const displayLabel = useMemo(() => !selectedOption ? \"\" : typeof formatDisplay === \"function\" ? formatDisplay(selectedOption) : selectedOption.label, [formatDisplay, selectedOption]);\n  const tabIndex = isEnabled ? 1 : void 0;\n  const dropdownMenuStyle = useMemo(() => menuMaxHeight ? { overflow: \"auto\", maxHeight: menuMaxHeight } : void 0, [menuMaxHeight]);\n  const dropdownMenuId = useId();\n  const optionsContent = useMemo(() => options.map((option, index) => {\n    const key = `${value}-${index}`;\n    const active = option === activeOption;\n    const selected = option === selectedOption;\n    return React__default.createElement(SelectInnerOption, { activateOptionIndex: handleActivateOptionIndex, active, index, key, onClick: handleOptionClick, option, selected, setRef: handleSetOptionRef });\n  }), [\n    activeOption,\n    handleActivateOptionIndex,\n    handleOptionClick,\n    handleSetOptionRef,\n    options,\n    selectedOption,\n    value\n  ]);\n  return React__default.createElement(\n    Wrapper,\n    { ...wrapperProps, \"$disabled\": disabled, ref: wrapperRef, shadow, style: { ...style, width } },\n    React__default.createElement(\"input\", { name, ref: inputRef, type: \"hidden\", value: String(value), ...inputProps }),\n    React__default.createElement(\n      StyledInner,\n      { \"aria-disabled\": disabled, \"aria-expanded\": open, \"aria-haspopup\": \"listbox\", \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy !== null && ariaLabelledBy !== void 0 ? ariaLabelledBy : labelId, \"aria-owns\": isEnabled && open ? dropdownMenuId : void 0, onBlur: handleBlur, onFocus: handleFocus, onKeyDown: handleButtonKeyDown, onMouseDown: isEnabled ? handleMouseDown : onMouseDown, ref: selectRef, role: \"button\", tabIndex, ...otherProps },\n      React__default.createElement(StyledSelectContent, null, displayLabel),\n      DropdownButton\n    ),\n    isEnabled && open && React__default.createElement(StyledDropdownMenu, { id: dropdownMenuId, onKeyDown: handleDropdownKeyDown, ref: handleSetDropdownRef, role: \"listbox\", style: dropdownMenuStyle, tabIndex: 0, variant }, optionsContent)\n  );\n}\nconst Select = forwardRef(SelectInner);\nSelect.displayName = \"Select\";\n\nexport { Select };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}