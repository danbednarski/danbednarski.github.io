{"ast":null,"code":"import React__default, { useMemo } from 'react';\nimport useControlledOrUncontrolled from '../common/hooks/useControlledOrUncontrolled.mjs';\nimport { StyledDropdownButton, StyledDropdownIcon, StyledFlatSelectWrapper, StyledSelectWrapper } from './Select.styles.mjs';\nconst emptyArray = [];\nconst useSelectCommon = ({\n  className,\n  defaultValue,\n  disabled,\n  native,\n  onChange,\n  options: optionsProp = emptyArray,\n  readOnly,\n  style,\n  value: valueProp,\n  variant,\n  width\n}) => {\n  var _a;\n  const options = useMemo(() => optionsProp.filter(Boolean), [optionsProp]);\n  const [value, setValue] = useControlledOrUncontrolled({\n    defaultValue: defaultValue !== null && defaultValue !== void 0 ? defaultValue : (_a = options === null || options === void 0 ? void 0 : options[0]) === null || _a === void 0 ? void 0 : _a.value,\n    onChange,\n    readOnly,\n    value: valueProp\n  });\n  const isEnabled = !(disabled || readOnly);\n  const wrapperProps = useMemo(() => ({\n    className,\n    style: {\n      ...style,\n      width\n    }\n  }), [className, style, width]);\n  const DropdownButton = useMemo(() => React__default.createElement(StyledDropdownButton, {\n    as: \"div\",\n    \"data-testid\": \"select-button\",\n    \"$disabled\": disabled,\n    native,\n    tabIndex: -1,\n    variant: variant === \"flat\" ? \"flat\" : \"raised\"\n  }, React__default.createElement(StyledDropdownIcon, {\n    \"data-testid\": \"select-icon\",\n    \"$disabled\": disabled\n  })), [disabled, native, variant]);\n  const Wrapper = useMemo(() => variant === \"flat\" ? StyledFlatSelectWrapper : StyledSelectWrapper, [variant]);\n  return useMemo(() => ({\n    isEnabled,\n    options,\n    value,\n    setValue,\n    wrapperProps,\n    DropdownButton,\n    Wrapper\n  }), [DropdownButton, Wrapper, isEnabled, options, setValue, value, wrapperProps]);\n};\nexport { useSelectCommon };","map":{"version":3,"names":["React__default","useMemo","useControlledOrUncontrolled","StyledDropdownButton","StyledDropdownIcon","StyledFlatSelectWrapper","StyledSelectWrapper","emptyArray","useSelectCommon","className","defaultValue","disabled","native","onChange","options","optionsProp","readOnly","style","value","valueProp","variant","width","_a","filter","Boolean","setValue","isEnabled","wrapperProps","DropdownButton","createElement","as","tabIndex","Wrapper"],"sources":["/Users/eliana/Documents/Code/darighost.github.io/node_modules/react95/dist/Select/useSelectCommon.mjs"],"sourcesContent":["import React__default, { useMemo } from 'react';\nimport useControlledOrUncontrolled from '../common/hooks/useControlledOrUncontrolled.mjs';\nimport { StyledDropdownButton, StyledDropdownIcon, StyledFlatSelectWrapper, StyledSelectWrapper } from './Select.styles.mjs';\n\nconst emptyArray = [];\nconst useSelectCommon = ({ className, defaultValue, disabled, native, onChange, options: optionsProp = emptyArray, readOnly, style, value: valueProp, variant, width }) => {\n  var _a;\n  const options = useMemo(() => optionsProp.filter(Boolean), [optionsProp]);\n  const [value, setValue] = useControlledOrUncontrolled({\n    defaultValue: defaultValue !== null && defaultValue !== void 0 ? defaultValue : (_a = options === null || options === void 0 ? void 0 : options[0]) === null || _a === void 0 ? void 0 : _a.value,\n    onChange,\n    readOnly,\n    value: valueProp\n  });\n  const isEnabled = !(disabled || readOnly);\n  const wrapperProps = useMemo(() => ({\n    className,\n    style: { ...style, width }\n  }), [className, style, width]);\n  const DropdownButton = useMemo(() => React__default.createElement(\n    StyledDropdownButton,\n    { as: \"div\", \"data-testid\": \"select-button\", \"$disabled\": disabled, native, tabIndex: -1, variant: variant === \"flat\" ? \"flat\" : \"raised\" },\n    React__default.createElement(StyledDropdownIcon, { \"data-testid\": \"select-icon\", \"$disabled\": disabled })\n  ), [disabled, native, variant]);\n  const Wrapper = useMemo(() => variant === \"flat\" ? StyledFlatSelectWrapper : StyledSelectWrapper, [variant]);\n  return useMemo(() => ({\n    isEnabled,\n    options,\n    value,\n    setValue,\n    wrapperProps,\n    DropdownButton,\n    Wrapper\n  }), [DropdownButton, Wrapper, isEnabled, options, setValue, value, wrapperProps]);\n};\n\nexport { useSelectCommon };\n"],"mappings":"AAAA,OAAOA,cAAc,IAAIC,OAAO,QAAQ,OAAO;AAC/C,OAAOC,2BAA2B,MAAM,iDAAiD;AACzF,SAASC,oBAAoB,EAAEC,kBAAkB,EAAEC,uBAAuB,EAAEC,mBAAmB,QAAQ,qBAAqB;AAE5H,MAAMC,UAAU,GAAG,EAAE;AACrB,MAAMC,eAAe,GAAGA,CAAC;EAAEC,SAAS;EAAEC,YAAY;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,OAAO,EAAEC,WAAW,GAAGR,UAAU;EAAES,QAAQ;EAAEC,KAAK;EAAEC,KAAK,EAAEC,SAAS;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EACzK,IAAIC,EAAE;EACN,MAAMR,OAAO,GAAGb,OAAO,CAAC,MAAMc,WAAW,CAACQ,MAAM,CAACC,OAAO,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EACzE,MAAM,CAACG,KAAK,EAAEO,QAAQ,CAAC,GAAGvB,2BAA2B,CAAC;IACpDQ,YAAY,EAAEA,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAG,CAACY,EAAE,GAAGR,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIQ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACJ,KAAK;IACjML,QAAQ;IACRG,QAAQ;IACRE,KAAK,EAAEC;EACT,CAAC,CAAC;EACF,MAAMO,SAAS,GAAG,EAAEf,QAAQ,IAAIK,QAAQ,CAAC;EACzC,MAAMW,YAAY,GAAG1B,OAAO,CAAC,OAAO;IAClCQ,SAAS;IACTQ,KAAK,EAAE;MAAE,GAAGA,KAAK;MAAEI;IAAM;EAC3B,CAAC,CAAC,EAAE,CAACZ,SAAS,EAAEQ,KAAK,EAAEI,KAAK,CAAC,CAAC;EAC9B,MAAMO,cAAc,GAAG3B,OAAO,CAAC,MAAMD,cAAc,CAAC6B,aAAa,CAC/D1B,oBAAoB,EACpB;IAAE2B,EAAE,EAAE,KAAK;IAAE,aAAa,EAAE,eAAe;IAAE,WAAW,EAAEnB,QAAQ;IAAEC,MAAM;IAAEmB,QAAQ,EAAE,CAAC,CAAC;IAAEX,OAAO,EAAEA,OAAO,KAAK,MAAM,GAAG,MAAM,GAAG;EAAS,CAAC,EAC3IpB,cAAc,CAAC6B,aAAa,CAACzB,kBAAkB,EAAE;IAAE,aAAa,EAAE,aAAa;IAAE,WAAW,EAAEO;EAAS,CAAC,CAC1G,CAAC,EAAE,CAACA,QAAQ,EAAEC,MAAM,EAAEQ,OAAO,CAAC,CAAC;EAC/B,MAAMY,OAAO,GAAG/B,OAAO,CAAC,MAAMmB,OAAO,KAAK,MAAM,GAAGf,uBAAuB,GAAGC,mBAAmB,EAAE,CAACc,OAAO,CAAC,CAAC;EAC5G,OAAOnB,OAAO,CAAC,OAAO;IACpByB,SAAS;IACTZ,OAAO;IACPI,KAAK;IACLO,QAAQ;IACRE,YAAY;IACZC,cAAc;IACdI;EACF,CAAC,CAAC,EAAE,CAACJ,cAAc,EAAEI,OAAO,EAAEN,SAAS,EAAEZ,OAAO,EAAEW,QAAQ,EAAEP,KAAK,EAAES,YAAY,CAAC,CAAC;AACnF,CAAC;AAED,SAASnB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}